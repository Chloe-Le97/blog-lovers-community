{"version":3,"sources":["services/blogs.js","reducers/blogReducer.js","reducers/notificationReducer.js","components/Blog.js","components/BlogList.js","services/login.js","components/Notification.js","components/BlogForm.js","components/Togglable.js","App.js","store.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","updateBlog","put","id","then","setToken","newToken","remove","object","delete","blogReducer","state","action","console","log","type","map","n","filter","notification","time","timeOutId","dispatch","clearTimeout","setTimeout","notiReducer","connect","blogs","sort","b","likes","blog","like","del","useState","blogVisible","setBlogVisible","hideWhenExpanded","display","showWhenExpanded","window","confirm","title","className","style","author","onClick","href","url","target","rel","onLike","user","username","mapDispatchToProps","likeBlog","blogToUpdate","blogService","likedBlog","deleteBlog","props","login","credentials","Notification","noti","useSelector","border","padding","borderWidth","marginBottom","color","createBlog","content","newBlog","setTitle","setAuthor","setUrl","onSubmit","event","preventDefault","alert","value","onChange","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","ConnectApp","useDispatch","setUsername","password","setPassword","setUser","setError","blogFormRef","useRef","useEffect","items","loggedUserJSON","localStorage","getItem","JSON","parse","handleLogin","loginService","setItem","stringify","name","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8b575ef.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n}\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst updateBlog = (newObject) => {\r\n  const request = axios.put(`${baseUrl}/${newObject.id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (object) =>{\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const request = axios.delete(`${baseUrl}/${object.id}`,config)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, updateBlog, setToken,remove }","import blogService from '../services/blogs'\r\n\r\nconst blogReducer = (state = [], action) => {\r\n    console.log('state now: ', state)\r\n    console.log('action', action)\r\n    switch(action.type){\r\n      case 'LIKE':{\r\n        return state.map(n => n.id !== action.data.id ? n : action.data)\r\n      }\r\n      case 'DELETE':{\r\n        return state.filter(n => n.id !== action.data.id)\r\n      }\r\n      case 'ADD':{\r\n        return [...state,action.data]\r\n      }\r\n      case 'INIT_BLOG':\r\n        return action.data\r\n      default:\r\n    return state\r\n    }\r\n  }\r\n  \r\n  export const initializeBlog = () => {\r\n    return async dispatch => {\r\n      const items = await blogService.getAll()\r\n      dispatch({\r\n        type: 'INIT_BLOG',\r\n        data: items,\r\n      })\r\n    }\r\n  }\r\n  \r\n  export const likeBlog = (blog) => {\r\n    return async dispatch => {\r\n      const blogToUpdate = {...blog, likes: blog.likes + 1}\r\n      const likedBlog = await blogService.updateBlog(blogToUpdate)\r\n      dispatch({\r\n        type: 'LIKE',\r\n        data: likedBlog\r\n      })\r\n    }\r\n  }\r\n  \r\n  export const createBlog = (content) =>{\r\n    return async dispatch =>{\r\n      const newBlog = await blogService.create(content)  \r\n      dispatch({\r\n        type:'ADD',\r\n        data:newBlog\r\n      });\r\n    }\r\n  }\r\n\r\n  export const deleteBlog = (blog) =>{\r\n      return async dispatch =>{\r\n        const deletedBlog = await blogService.remove(blog)\r\n        dispatch({\r\n          type: 'DELETE',\r\n          data: blog\r\n        })\r\n      }\r\n  }\r\n  \r\n  export default blogReducer","const notiReducer = (state='',action) =>{\r\n\r\n    switch(action.type){\r\n        case 'SET_NOTI':\r\n            return action.data\r\n        case 'REMOVE_NOTI':\r\n            return null\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const notification = (data,time) =>{\r\n    let timeOutId \r\n    return async dispatch=>{\r\n        await dispatch({\r\n            type:'SET_NOTI',\r\n            data\r\n        })\r\n        \r\n        if(timeOutId){\r\n            clearTimeout(timeOutId)\r\n        }\r\n        timeOutId = setTimeout(()=>{\r\n            dispatch({\r\n                type:'REMOVE_NOTI'\r\n            })\r\n        },time)\r\n    } \r\n}\r\n\r\n\r\nexport default notiReducer","import React,{useState} from 'react';\r\nimport './Blog.style.css';\r\nimport blogService from '../services/blogs'\r\nimport { connect } from 'react-redux';\r\n\r\nconst Blog = ({blog,like,id,notification,del}) => {\r\n  const [blogVisible, setBlogVisible] = useState(false)\r\n  \r\n  const hideWhenExpanded = { display: blogVisible ? 'none' : '' }\r\n  const showWhenExpanded = { display: blogVisible ? '' : 'none' }\r\n\r\n  const remove = async () =>{\r\n    if(window.confirm(`Do you want to delete blog post ${blog.title}?`)){\r\n      console.log(blog)\r\n      del(blog)\r\n    }\r\n  }\r\n\r\n  const onLike = (blog) => {\r\n    \r\n    const {title,id} = blog\r\n    like(blog)\r\n    notification(`You have voted for '${title}' `,5000)\r\n}\r\n\r\n  return(\r\n  <div>\r\n      <div className='blog'>\r\n          <div style={hideWhenExpanded}>\r\n      <strong>{blog.title}</strong> {blog.author} \r\n      <button onClick={() => setBlogVisible(!blogVisible)} id='show' className='blog-btn'>View</button>\r\n    </div>\r\n    <div style={showWhenExpanded} className=\"togglableContent\">\r\n      <div>\r\n        <strong>{blog.title} </strong> {blog.author}\r\n        <button onClick={() => setBlogVisible(!blogVisible)} className='blog-btn'> Hidden </button>\r\n      </div>\r\n      <a href={blog.url} target=\"_blank\" rel='noopener noreferrer'>{blog.url}</a> \r\n      <div>likes {blog.likes} <button type='button' onClick={()=>onLike(blog)} className='like'>like</button></div>\r\n      <div> added by {blog.user.username}</div>\r\n      {/* {user&&user.username==blog.user.username?(<div><button onClick={remove}>Remove</button></div>):(null)} */}\r\n      <div><button onClick={() => remove(blog)}>Remove</button></div>\r\n    </div>\r\n      </div>\r\n  \r\n  \r\n  </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n  const sortBlogs = state.blogs.sort(function(a,b){\r\n    return b.likes - a.likes\r\n  })\r\n  return {blogs: sortBlogs}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Blog)","import React,{useState} from 'react';\r\nimport './Blog.style.css';\r\nimport {likeBlog} from '../reducers/blogReducer'\r\nimport {notification} from '../reducers/notificationReducer'\r\nimport {deleteBlog} from '../reducers/blogReducer'\r\nimport { connect } from 'react-redux';\r\nimport Blog from './Blog'\r\n\r\nconst BlogList = (props) => {\r\n\r\n  return(\r\n  <div>\r\n    {props.blogs.map(blog=>(\r\n      <Blog id={blog.id} blog = {blog} like={props.likeBlog} notification={props.notification} del={props.deleteBlog}/>\r\n    ))}\r\n  \r\n  </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n  const sortBlogs = state.blogs.sort(function(a,b){\r\n    return b.likes - a.likes\r\n  })\r\n  return {blogs: sortBlogs}\r\n}\r\n\r\nconst mapDispatchToProps ={\r\n  likeBlog,notification,deleteBlog\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(BlogList)\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Notification = () => {\r\n  const noti = useSelector(state => state.noti)\r\n  const style = {\r\n    border: 'solid',\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    marginBottom: 15,\r\n    color:'red'\r\n  }\r\n  return (\r\n    noti?(<div style={style}>\r\n      {noti}\r\n    </div>):(null)\r\n   \r\n  )\r\n}\r\n\r\nexport default Notification","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {createBlog} from '../reducers/blogReducer'\r\nimport { connect } from 'react-redux' \r\nimport {notification} from '../reducers/notificationReducer'\r\n\r\nconst BlogForm = (props) => {\r\n    const [title, setTitle] = useState('')\r\n    const [author, setAuthor] = useState('')\r\n    const [url, setUrl] = useState('')\r\n\r\n    const addBlog = (event) =>{\r\n        console.log('hello')\r\n        event.preventDefault()\r\n        if(title&&author){\r\n          props.createBlog({title:title,author:author,url:url})\r\n          props.notification('New blog added',5000)\r\n          setTitle('');\r\n          setUrl('');\r\n          setAuthor('');\r\n        }else{\r\n            alert('Please type title and author of the blog')\r\n        }\r\n      }\r\n\r\n    // BlogForm.propTypes={\r\n    //     addBlog: PropTypes.func.isRequired,\r\n    //     createBlog: PropTypes.func.isRequired,\r\n    // }\r\n      \r\n    return (\r\n      <div className=\"formDiv\">\r\n        <h2>Create new blog</h2>\r\n        <form onSubmit={addBlog}>\r\n        <div>title\r\n          <input\r\n            id='title'\r\n            value={title}\r\n            onChange={({target})=>setTitle(target.value)}\r\n          />\r\n        </div>\r\n        <div>author\r\n          <input\r\n             id='author'\r\n            value={author}\r\n            onChange={({target})=>setAuthor(target.value)}\r\n          />\r\n        </div>\r\n        <div>url\r\n          <input\r\n            value={url}\r\n            onChange={({target})=>setUrl(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n        </div>\r\n    )\r\n }\r\n\r\n const mapDispatchToProps = {\r\n  createBlog,notification\r\n}\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(BlogForm);","import React, { useState, useImperativeHandle } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n    const [visible, setVisible] = useState(false)\r\n  \r\n    const hideWhenVisible = { display: visible ? 'none' : '' }\r\n    const showWhenVisible = { display: visible ? '' : 'none' }\r\n  \r\n    const toggleVisibility = () => {\r\n      setVisible(!visible)\r\n    }\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n          toggleVisibility\r\n        }\r\n      })\r\n    \r\n      Togglable.propTypes = {\r\n        buttonLabel: PropTypes.string.isRequired\r\n      }\r\n\r\n    return (\r\n      <div>\r\n        <div style={hideWhenVisible}>\r\n          <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n        </div>\r\n        <div style={showWhenVisible}>\r\n          {props.children}\r\n          <button onClick={toggleVisibility}>cancel</button>\r\n        </div>\r\n      </div>\r\n    )\r\n})\r\n  \r\n    Togglable.displayName = 'Togglable'\r\n    export default Togglable","import React, { useState, useEffect,useRef } from 'react'\r\nimport BlogList from './components/BlogList'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport Notification from './components/Notification'\r\nimport BlogForm from './components/BlogForm';\r\nimport Togglable from './components/Togglable';\r\nimport {notification} from './reducers/notificationReducer'\r\nimport {initializeBlog} from './reducers/blogReducer'\r\nimport { connect } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport './App.css'\r\n\r\nconst App = (props) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [username, setUsername] = useState('') \r\n  const [password, setPassword] = useState('') \r\n  const [user, setUser] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const blogFormRef = useRef()\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeBlog())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  \r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    \r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(user)\r\n      ) \r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      props.notification(`Login successfully`,5000)\r\n      setError(false)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      props.notification('Wrong credentials',5000)\r\n      setError(true)\r\n    }\r\n  }\r\n\r\n  \r\n  const loginForm = () => (\r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n        username\r\n          <input\r\n          id='username'\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n          <input\r\n          id='password'\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <button id=\"login-button\" type=\"submit\">login</button>\r\n    </form>      \r\n  )\r\n\r\n\r\n  const logout = () =>{\r\n    setUser(null);\r\n    window.localStorage.setItem(\r\n      'loggedBlogappUser', ''\r\n    ) \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>blogs</h2>\r\n\r\n      <Notification/>\r\n      \r\n      {user == null ?\r\n      loginForm() :(\r\n      <div>\r\n        <div className='app_user'>\r\n          <p>{user.username} logged-in</p>\r\n          <button type='button' onClick={logout} className='logout_button'>Log out</button>\r\n        </div>\r\n        <Togglable buttonLabel='new note' ref={blogFormRef}>\r\n          <BlogForm></BlogForm>\r\n        </Togglable>\r\n        \r\n\r\n      </div>)\r\n    }\r\n    <BlogList/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  notification\r\n}\r\n\r\nconst ConnectApp = connect(null,mapDispatchToProps)(App)\r\nexport default ConnectApp","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport notiReducer from './reducers/notificationReducer.js'\r\nimport blogReducer from './reducers/blogReducer'\r\n\r\nconst reducer = combineReducers({\r\n    noti: notiReducer,\r\n    blogs: blogReducer\r\n  })\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport ConnectApp from './App'\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ConnectApp />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}
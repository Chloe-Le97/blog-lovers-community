{"version":3,"sources":["services/blogs.js","reducers/blogReducer.js","reducers/notificationReducer.js","components/Blog.js","components/BlogList.js","components/Notification.js","services/signup.js","services/login.js","reducers/userReducer.js","components/Authentication.js","components/BlogForm.js","components/Togglable.js","App.js","store.js","index.js"],"names":["token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","updateBlog","put","id","then","setToken","newToken","remove","object","delete","blogReducer","state","action","console","log","type","map","n","filter","notification","time","timeOutId","dispatch","clearTimeout","setTimeout","notiReducer","Blog","blog","like","del","user","useState","blogVisible","setBlogVisible","hideWhenExpanded","display","showWhenExpanded","window","confirm","title","className","style","author","onClick","href","url","target","rel","likes","onLike","username","mapDispatchToProps","likeBlog","blogToUpdate","blogService","likedBlog","deleteBlog","connect","blogs","sort","b","props","Notification","noti","useSelector","border","padding","borderWidth","marginBottom","color","signUp","newUser","login","credentials","setUser","userReducer","logIn","password","loginService","localStorage","setItem","JSON","stringify","setUsername","setPassword","repeatPassword","setRepeatPassword","signUpVisible","setSignUpVisible","signIn","handleLogin","event","preventDefault","exception","handleSignUp","alert","signUpService","onSubmit","value","name","onChange","createBlog","content","item","setTitle","setAuthor","setUrl","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","removeUser","ConnectApp","useDispatch","blogFormRef","useRef","useEffect","items","loggedUserJSON","getItem","parse","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16e6995a.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n}\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst updateBlog = (newObject) => {\r\n  const request = axios.put(`${baseUrl}/${newObject.id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (object) =>{\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const request = axios.delete(`${baseUrl}/${object.id}`,config)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, updateBlog, setToken,remove }","import blogService from '../services/blogs'\r\n\r\nconst blogReducer = (state = [], action) => {\r\n    console.log('state now: ', state)\r\n    console.log('action', action)\r\n    switch(action.type){\r\n      case 'LIKE':{\r\n        return state.map(n => n.id !== action.data.id ? n : action.data)\r\n      }\r\n      case 'DELETE':{\r\n        return state.filter(n => n.id !== action.data.id)\r\n      }\r\n      case 'ADD':{\r\n        return action.data\r\n      }\r\n      case 'INIT_BLOG':\r\n        return action.data\r\n      default:\r\n    return state\r\n    }\r\n  }\r\n  \r\n  export const initializeBlog = () => {\r\n    return async dispatch => {\r\n      const items = await blogService.getAll()\r\n      dispatch({\r\n        type: 'INIT_BLOG',\r\n        data: items,\r\n      })\r\n    }\r\n  }\r\n  \r\n  export const likeBlog = (blog) => {\r\n    return async dispatch => {\r\n      const blogToUpdate = {...blog, likes: blog.likes + 1}\r\n      const likedBlog = await blogService.updateBlog(blogToUpdate)\r\n      dispatch({\r\n        type: 'LIKE',\r\n        data: likedBlog\r\n      })\r\n    }\r\n  }\r\n  \r\n  export const createBlog = (content) =>{\r\n    return async dispatch =>{\r\n      await blogService.create(content)  \r\n      const item = await blogService.getAll()\r\n      dispatch({\r\n        type: 'ADD',\r\n        data: item,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const deleteBlog = (blog) =>{\r\n      return async dispatch =>{\r\n        const deletedBlog = await blogService.remove(blog)\r\n        dispatch({\r\n          type: 'DELETE',\r\n          data: blog\r\n        })\r\n      }\r\n  }\r\n  \r\n  export default blogReducer","const notiReducer = (state='',action) =>{\r\n\r\n    switch(action.type){\r\n        case 'SET_NOTI':\r\n            return action.data\r\n        case 'REMOVE_NOTI':\r\n            return null\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const notification = (data,time) =>{\r\n    let timeOutId \r\n    return async dispatch=>{\r\n        await dispatch({\r\n            type:'SET_NOTI',\r\n            data\r\n        })\r\n        \r\n        if(timeOutId){\r\n            clearTimeout(timeOutId)\r\n        }\r\n        timeOutId = setTimeout(()=>{\r\n            dispatch({\r\n                type:'REMOVE_NOTI'\r\n            })\r\n        },time)\r\n    } \r\n}\r\n\r\n\r\nexport default notiReducer","import React,{useState} from 'react';\r\nimport './Blog.style.css';\r\n\r\n\r\nconst Blog = ({blog,like,id,notification,del,user}) => {\r\n  const [blogVisible, setBlogVisible] = useState(false)\r\n  \r\n  const hideWhenExpanded = { display: blogVisible ? 'none' : '' }\r\n  const showWhenExpanded = { display: blogVisible ? '' : 'none' }\r\n\r\n  const remove = async () =>{\r\n    if(window.confirm(`Do you want to delete blog post ${blog.title}?`)){\r\n      console.log(blog)\r\n      del(blog)\r\n    }\r\n  }\r\n\r\n  const onLike = (blog) => {\r\n    \r\n    const {title,id} = blog\r\n    like(blog)\r\n    notification(`You have voted for '${title}' `,5000)\r\n}\r\n\r\n  return(\r\n  <div>\r\n      <div className='blog'>\r\n          <div style={hideWhenExpanded}>\r\n      <strong>{blog.title}</strong> {blog.author} \r\n      <button onClick={() => setBlogVisible(!blogVisible)} id='show' className='blog-btn'>View</button>\r\n    </div>\r\n    <div style={showWhenExpanded} className=\"togglableContent\">\r\n      <div>\r\n        <strong>{blog.title} </strong> {blog.author}\r\n        <button onClick={() => setBlogVisible(!blogVisible)} className='blog-btn'> Hidden </button>\r\n      </div>\r\n      <a href={blog.url} target=\"_blank\" rel='noopener noreferrer'>{blog.url}</a> \r\n      <div>likes {blog.likes} <button type='button' onClick={()=>onLike(blog)} className='like'>like</button></div>\r\n      <div> added by {blog.user.username}</div>\r\n      {user.username==blog.user.username?(<div><button onClick={() => remove(blog)}>Remove</button></div>):(null)}\r\n      \r\n    </div>\r\n      </div>  \r\n  </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Blog","import React,{useState} from 'react';\r\nimport './Blog.style.css';\r\nimport {likeBlog} from '../reducers/blogReducer'\r\nimport {notification} from '../reducers/notificationReducer'\r\nimport {deleteBlog} from '../reducers/blogReducer'\r\nimport { connect } from 'react-redux';\r\nimport Blog from './Blog'\r\n\r\nconst BlogList = (props) => {\r\n\r\n  return(\r\n  <div>\r\n    {props.blogs.map(blog=>(\r\n      <Blog id={blog.id} blog = {blog} like={props.likeBlog} notification={props.notification} del={props.deleteBlog} user={props.user}/>\r\n    ))}\r\n  \r\n  </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n  const sortBlogs = state.blogs.sort(function(a,b){\r\n    return b.likes - a.likes\r\n  })\r\n  return {blogs: sortBlogs,user:state.user}\r\n}\r\n\r\nconst mapDispatchToProps ={\r\n  likeBlog,notification,deleteBlog\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(BlogList)\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Notification = () => {\r\n  const noti = useSelector(state => state.noti)\r\n  const style = {\r\n    border: 'solid',\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    marginBottom: 15,\r\n    color:'red'\r\n  }\r\n  return (\r\n    noti?(<div style={style}>\r\n      {noti}\r\n    </div>):(null)\r\n   \r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst signUp = async newUser => {\r\n  const response = await axios.post(baseUrl, newUser)\r\n  return response.data\r\n}\r\n\r\nexport default { signUp }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import loginService from '../services/login';\r\nimport blogService from '../services/blogs'\r\n\r\nconst userReducer = (state='',action) =>{\r\n    switch(action.type){\r\n        case 'SET_USER':\r\n            return action.data\r\n        case 'REMOVE_USER':\r\n            return null\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const setUser = (user) =>{\r\n        return ({\r\n            type:'SET_USER',\r\n            data: user\r\n        })\r\n    } \r\n\r\nexport const logIn = (username,password) => {\r\n    return async dispatch =>{\r\n        const user = await loginService.login({\r\n            username, password,\r\n          })\r\n        window.localStorage.setItem(\r\n            'loggedBlogappUser', JSON.stringify(user)\r\n          ) \r\n        blogService.setToken(user.token)\r\n        dispatch({\r\n            type:'SET_USER',\r\n            data: user\r\n        })\r\n    } \r\n\r\n}\r\n\r\nexport const removeUser = () =>{\r\n   return ({\r\n        type:'REMOVE_USER'\r\n    })\r\n}\r\n\r\nexport default userReducer","import React,{useState} from 'react';\r\nimport signUpService from '../services/signup';\r\nimport blogService from '../services/blogs'\r\nimport { connect } from 'react-redux';\r\nimport {notification} from '../reducers/notificationReducer'\r\nimport {logIn} from '../reducers/userReducer'\r\nimport {setUser} from '../reducers/userReducer'\r\n\r\nconst UserAuthentication = (props) =>{\r\n\r\n    const [username, setUsername] = useState('') \r\n    const [password, setPassword] = useState('')\r\n    const [repeatPassword, setRepeatPassword] = useState('')\r\n    const [signUpVisible, setSignUpVisible] = useState(false)\r\n\r\n    const signIn = { display: signUpVisible ? 'none' : '' }\r\n    const signUp = { display: signUpVisible ? '' : 'none' }\r\n\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault()\r\n        \r\n        try {\r\n          props.logIn(username,password)\r\n          props.notification(`Sign In successfully`,5000)\r\n          setUsername('')\r\n          setPassword('')\r\n          setRepeatPassword('')\r\n        } catch (exception) {\r\n          props.notification('Wrong credentials',5000)\r\n        }\r\n      }\r\n    \r\n      const handleSignUp = async (event) => {\r\n        event.preventDefault()\r\n        \r\n        if(repeatPassword != password){\r\n            alert('Repeat password is not the same with password, please type again')\r\n        }\r\n\r\n        try {\r\n          const user = await signUpService.signUp({\r\n            username, password,\r\n          })\r\n    \r\n          window.localStorage.setItem(\r\n            'loggedBlogappUser', JSON.stringify(user)\r\n          ) \r\n          blogService.setToken(user.token)\r\n          props.logIn(username,password)\r\n          props.notification(`Sign Up successfully`,5000)\r\n          setUsername('')\r\n          setPassword('')\r\n          setRepeatPassword('')\r\n        } catch (exception) {\r\n          props.notification('Wrong credentials',5000)\r\n        }\r\n      }\r\n\r\n    return(\r\n        <div>\r\n            <div className='blog'>\r\n                <div style={signIn}>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div>\r\n                            username\r\n                            <input\r\n                            id='username'\r\n                            type=\"text\"\r\n                            value={username}\r\n                            name=\"Username\"\r\n                            onChange={({ target }) => setUsername(target.value)}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            password\r\n                            <input\r\n                            id='password'\r\n                            type=\"password\"\r\n                            value={password}\r\n                            name=\"Password\"\r\n                            onChange={({ target }) => setPassword(target.value)}\r\n                            />\r\n                        </div>\r\n                        <button id=\"login-button\" type=\"submit\">Login</button>\r\n                        <div style={{color: \"red\"}} onClick={() => setSignUpVisible(!signUpVisible)} className='blog-btn'> Not a member? <strong>Sign Up</strong></div>\r\n                    </form> \r\n                </div>\r\n          <div style={signUp}>\r\n           <form onSubmit={handleSignUp}>\r\n            <div>\r\n                username\r\n                <input\r\n                id='username'\r\n                type=\"text\"\r\n                value={username}\r\n                name=\"Username\"\r\n                onChange={({ target }) => setUsername(target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                password\r\n                <input\r\n                id='password'\r\n                type=\"password\"\r\n                value={password}\r\n                name=\"Password\"\r\n                onChange={({ target }) => setPassword(target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                repeat password\r\n                <input\r\n                id='password'\r\n                type=\"password\"\r\n                value={repeatPassword}\r\n                name=\"Password\"\r\n                onChange={({ target }) => setRepeatPassword(target.value)}\r\n                />\r\n            </div>\r\n            <button id=\"login-button\" type=\"submit\">Sign Up</button>\r\n            <div style={{color: \"red\"}} onClick={() => setSignUpVisible(!signUpVisible)} className='blog-btn'> Already a member? <strong>Login</strong></div>\r\n         </form> \r\n          </div>\r\n            </div>\r\n        \r\n        \r\n        </div>\r\n        )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    notification, setUser, logIn\r\n  }\r\n\r\n  export default connect(null,mapDispatchToProps)(UserAuthentication)","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {createBlog} from '../reducers/blogReducer'\r\nimport { connect } from 'react-redux' \r\nimport {notification} from '../reducers/notificationReducer'\r\n\r\nconst BlogForm = (props) => {\r\n    const [title, setTitle] = useState('')\r\n    const [author, setAuthor] = useState('')\r\n    const [url, setUrl] = useState('')\r\n\r\n    const addBlog = (event) =>{\r\n        console.log('hello')\r\n        event.preventDefault()\r\n        if(title&&author){\r\n          props.createBlog({title:title,author:author,url:url})\r\n          props.notification('New blog added',5000)\r\n          setTitle('');\r\n          setUrl('');\r\n          setAuthor('');\r\n        }else{\r\n            alert('Please type title and author of the blog')\r\n        }\r\n      }\r\n\r\n    // BlogForm.propTypes={\r\n    //     addBlog: PropTypes.func.isRequired,\r\n    //     createBlog: PropTypes.func.isRequired,\r\n    // }\r\n      \r\n    return (\r\n      <div className=\"formDiv\">\r\n        <h2>Save new blog</h2>\r\n        <form onSubmit={addBlog}>\r\n        <div>title\r\n          <input\r\n            id='title'\r\n            value={title}\r\n            onChange={({target})=>setTitle(target.value)}\r\n          />\r\n        </div>\r\n        <div>author\r\n          <input\r\n             id='author'\r\n            value={author}\r\n            onChange={({target})=>setAuthor(target.value)}\r\n          />\r\n        </div>\r\n        <div>url\r\n          <input\r\n            value={url}\r\n            onChange={({target})=>setUrl(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n        </div>\r\n    )\r\n }\r\n\r\n const mapDispatchToProps = {\r\n  createBlog,notification\r\n}\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(BlogForm);","import React, { useState, useImperativeHandle } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n    const [visible, setVisible] = useState(false)\r\n  \r\n    const hideWhenVisible = { display: visible ? 'none' : '' }\r\n    const showWhenVisible = { display: visible ? '' : 'none' }\r\n  \r\n    const toggleVisibility = () => {\r\n      setVisible(!visible)\r\n    }\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n          toggleVisibility\r\n        }\r\n      })\r\n    \r\n      Togglable.propTypes = {\r\n        buttonLabel: PropTypes.string.isRequired\r\n      }\r\n\r\n    return (\r\n      <div>\r\n        <div style={hideWhenVisible}>\r\n          <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n        </div>\r\n        <div style={showWhenVisible}>\r\n          {props.children}\r\n          <button onClick={toggleVisibility}>cancel</button>\r\n        </div>\r\n      </div>\r\n    )\r\n})\r\n  \r\n    Togglable.displayName = 'Togglable'\r\n    export default Togglable","import React, { useState, useEffect,useRef } from 'react'\r\nimport BlogList from './components/BlogList'\r\nimport Notification from './components/Notification'\r\nimport UserAuthentication from './components/Authentication'\r\nimport BlogForm from './components/BlogForm';\r\nimport Togglable from './components/Togglable';\r\nimport {notification} from './reducers/notificationReducer'\r\nimport blogService from './services/blogs'\r\nimport {setUser} from './reducers/userReducer'\r\nimport {removeUser} from './reducers/userReducer'\r\nimport {initializeBlog} from './reducers/blogReducer'\r\nimport { connect } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport './App.css'\r\n\r\nconst App = (props) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const blogFormRef = useRef()\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeBlog())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      props.setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const logout = () =>{\r\n    props.removeUser();\r\n    window.localStorage.setItem(\r\n      'loggedBlogappUser', ''\r\n    ) \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>blogs</h2>\r\n\r\n      <Notification/>\r\n      \r\n      {props.user == null ?\r\n      (\r\n        <UserAuthentication/>\r\n        \r\n      ) \r\n      :(\r\n      <div>\r\n        <div className='app_user'>\r\n          <p>{props.user.username} logged-in</p>\r\n          <button type='button' onClick={logout} className='logout_button'>Log out</button>\r\n        </div>\r\n        <Togglable buttonLabel='Add new blog' ref={blogFormRef}>\r\n          <BlogForm></BlogForm>\r\n        </Togglable>\r\n        \r\n\r\n      </div>)\r\n    }\r\n    <BlogList/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n  return {user:state.user}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  notification, removeUser,setUser\r\n}\r\n\r\nconst ConnectApp = connect(mapStateToProps,mapDispatchToProps)(App)\r\nexport default ConnectApp","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport notiReducer from './reducers/notificationReducer.js'\r\nimport blogReducer from './reducers/blogReducer'\r\nimport userReducer from './reducers/userReducer.js'\r\n\r\nconst reducer = combineReducers({\r\n    noti: notiReducer,\r\n    blogs: blogReducer,\r\n    user: userReducer\r\n  })\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport ConnectApp from './App'\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ConnectApp />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}